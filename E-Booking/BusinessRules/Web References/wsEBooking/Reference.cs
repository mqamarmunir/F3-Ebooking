//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34003.
// 
#pragma warning disable 1591

namespace BusinessRules.wsEBooking {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsEBookingSoap", Namespace="http://cad.valentiatech.com/")]
    public partial class wsEBooking : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private UsernamePasswordSoapHeader usernamePasswordHeaderField;
        
        private System.Threading.SendOrPostCallback SearchTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAppointementTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateAppointmentTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAppointmentTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAppointmentDurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateAppointmentDurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAppointmentDurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchGPPracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrUpdateGPPracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePracticeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchFacilityTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateFacilityTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchFacilityAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateFacilityAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFacilityAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchReasonForTransportOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateTransportReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTransportReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchTransportSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateTransportSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTransportSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchInfectiousOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateInfectiousOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInfectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchEscortTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateEscortTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEscortOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchReasonForRejectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateReasonForRejectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteRejectionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchReasonForCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateCancelReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCancellationReasonOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchClinicianRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddORUpdateAuthenticationRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAuthRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddorUpdateWebUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddorUpdateJourneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJourneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJourneys_FilteredOn_JourneyDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeJourneyStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDuplicateAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchFlagspatient_AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchFlagAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJourneyPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoUserExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCallNotesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsEBooking() {
            this.Url = global::BusinessRules.Properties.Settings.Default.BusinessRules_wsEBooking_wsEBooking;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public UsernamePasswordSoapHeader UsernamePasswordHeader {
            get {
                return this.usernamePasswordHeaderField;
            }
            set {
                this.usernamePasswordHeaderField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SearchTitleCompletedEventHandler SearchTitleCompleted;
        
        /// <remarks/>
        public event AddORUpdateTitleCompletedEventHandler AddORUpdateTitleCompleted;
        
        /// <remarks/>
        public event DeleteTitleCompletedEventHandler DeleteTitleCompleted;
        
        /// <remarks/>
        public event SearchAppointementTimeCompletedEventHandler SearchAppointementTimeCompleted;
        
        /// <remarks/>
        public event AddORUpdateAppointmentTimeCompletedEventHandler AddORUpdateAppointmentTimeCompleted;
        
        /// <remarks/>
        public event DeleteAppointmentTimeCompletedEventHandler DeleteAppointmentTimeCompleted;
        
        /// <remarks/>
        public event SearchAppointmentDurationCompletedEventHandler SearchAppointmentDurationCompleted;
        
        /// <remarks/>
        public event AddORUpdateAppointmentDurationCompletedEventHandler AddORUpdateAppointmentDurationCompleted;
        
        /// <remarks/>
        public event DeleteAppointmentDurationCompletedEventHandler DeleteAppointmentDurationCompleted;
        
        /// <remarks/>
        public event SearchGPPracticeCompletedEventHandler SearchGPPracticeCompleted;
        
        /// <remarks/>
        public event AddOrUpdateGPPracticeCompletedEventHandler AddOrUpdateGPPracticeCompleted;
        
        /// <remarks/>
        public event DeletePracticeCompletedEventHandler DeletePracticeCompleted;
        
        /// <remarks/>
        public event SearchRelationshipCompletedEventHandler SearchRelationshipCompleted;
        
        /// <remarks/>
        public event AddORUpdateRelationshipCompletedEventHandler AddORUpdateRelationshipCompleted;
        
        /// <remarks/>
        public event DeleteRelationshipCompletedEventHandler DeleteRelationshipCompleted;
        
        /// <remarks/>
        public event SearchFacilityTypeCompletedEventHandler SearchFacilityTypeCompleted;
        
        /// <remarks/>
        public event AddORUpdateFacilityTypeCompletedEventHandler AddORUpdateFacilityTypeCompleted;
        
        /// <remarks/>
        public event SearchFacilityAddressCompletedEventHandler SearchFacilityAddressCompleted;
        
        /// <remarks/>
        public event AddORUpdateFacilityAddressCompletedEventHandler AddORUpdateFacilityAddressCompleted;
        
        /// <remarks/>
        public event DeleteFacilityAddressCompletedEventHandler DeleteFacilityAddressCompleted;
        
        /// <remarks/>
        public event SearchReasonForTransportCompletedEventHandler SearchReasonForTransportCompleted;
        
        /// <remarks/>
        public event AddORUpdateTransportReasonCompletedEventHandler AddORUpdateTransportReasonCompleted;
        
        /// <remarks/>
        public event DeleteTransportReasonCompletedEventHandler DeleteTransportReasonCompleted;
        
        /// <remarks/>
        public event SearchTransportSelectionCompletedEventHandler SearchTransportSelectionCompleted;
        
        /// <remarks/>
        public event AddORUpdateTransportSelectionCompletedEventHandler AddORUpdateTransportSelectionCompleted;
        
        /// <remarks/>
        public event DeleteTransportSelectionCompletedEventHandler DeleteTransportSelectionCompleted;
        
        /// <remarks/>
        public event SearchInfectiousCompletedEventHandler SearchInfectiousCompleted;
        
        /// <remarks/>
        public event AddORUpdateInfectiousCompletedEventHandler AddORUpdateInfectiousCompleted;
        
        /// <remarks/>
        public event DeleteInfectionCompletedEventHandler DeleteInfectionCompleted;
        
        /// <remarks/>
        public event SearchEscortTypeCompletedEventHandler SearchEscortTypeCompleted;
        
        /// <remarks/>
        public event AddORUpdateEscortTypeCompletedEventHandler AddORUpdateEscortTypeCompleted;
        
        /// <remarks/>
        public event DeleteEscortCompletedEventHandler DeleteEscortCompleted;
        
        /// <remarks/>
        public event SearchReasonForRejectionCompletedEventHandler SearchReasonForRejectionCompleted;
        
        /// <remarks/>
        public event AddORUpdateReasonForRejectionCompletedEventHandler AddORUpdateReasonForRejectionCompleted;
        
        /// <remarks/>
        public event DeleteRejectionListCompletedEventHandler DeleteRejectionListCompleted;
        
        /// <remarks/>
        public event SearchReasonForCancellationCompletedEventHandler SearchReasonForCancellationCompleted;
        
        /// <remarks/>
        public event AddORUpdateCancelReasonCompletedEventHandler AddORUpdateCancelReasonCompleted;
        
        /// <remarks/>
        public event DeleteCancellationReasonCompletedEventHandler DeleteCancellationReasonCompleted;
        
        /// <remarks/>
        public event SearchClinicianRoleCompletedEventHandler SearchClinicianRoleCompleted;
        
        /// <remarks/>
        public event AddORUpdateAuthenticationRoleCompletedEventHandler AddORUpdateAuthenticationRoleCompleted;
        
        /// <remarks/>
        public event DeleteAuthRoleCompletedEventHandler DeleteAuthRoleCompleted;
        
        /// <remarks/>
        public event LoadCacheCompletedEventHandler LoadCacheCompleted;
        
        /// <remarks/>
        public event AddorUpdateWebUserCompletedEventHandler AddorUpdateWebUserCompleted;
        
        /// <remarks/>
        public event GetUserDetailsCompletedEventHandler GetUserDetailsCompleted;
        
        /// <remarks/>
        public event AddorUpdateJourneyCompletedEventHandler AddorUpdateJourneyCompleted;
        
        /// <remarks/>
        public event GetJourneyCompletedEventHandler GetJourneyCompleted;
        
        /// <remarks/>
        public event GetJourneys_FilteredOn_JourneyDateCompletedEventHandler GetJourneys_FilteredOn_JourneyDateCompleted;
        
        /// <remarks/>
        public event ChangeJourneyStatusCompletedEventHandler ChangeJourneyStatusCompleted;
        
        /// <remarks/>
        public event CheckDuplicateAddressCompletedEventHandler CheckDuplicateAddressCompleted;
        
        /// <remarks/>
        public event SearchFlagspatient_AddressCompletedEventHandler SearchFlagspatient_AddressCompleted;
        
        /// <remarks/>
        public event SearchFlagAddressCompletedEventHandler SearchFlagAddressCompleted;
        
        /// <remarks/>
        public event CheckEmailAddressCompletedEventHandler CheckEmailAddressCompleted;
        
        /// <remarks/>
        public event SearchPatientCompletedEventHandler SearchPatientCompleted;
        
        /// <remarks/>
        public event GetJourneyPDFCompletedEventHandler GetJourneyPDFCompleted;
        
        /// <remarks/>
        public event DoUserExistsCompletedEventHandler DoUserExistsCompleted;
        
        /// <remarks/>
        public event GetCallNotesCompletedEventHandler GetCallNotesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchTitle", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchTitle(string Title) {
            object[] results = this.Invoke("SearchTitle", new object[] {
                        Title});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchTitleAsync(string Title) {
            this.SearchTitleAsync(Title, null);
        }
        
        /// <remarks/>
        public void SearchTitleAsync(string Title, object userState) {
            if ((this.SearchTitleOperationCompleted == null)) {
                this.SearchTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchTitleOperationCompleted);
            }
            this.InvokeAsync("SearchTitle", new object[] {
                        Title}, this.SearchTitleOperationCompleted, userState);
        }
        
        private void OnSearchTitleOperationCompleted(object arg) {
            if ((this.SearchTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchTitleCompleted(this, new SearchTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateTitle", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateTitle(int TitleID, string Title, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateTitle", new object[] {
                        TitleID,
                        Title,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateTitleAsync(int TitleID, string Title, int ModifiedBy) {
            this.AddORUpdateTitleAsync(TitleID, Title, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateTitleAsync(int TitleID, string Title, int ModifiedBy, object userState) {
            if ((this.AddORUpdateTitleOperationCompleted == null)) {
                this.AddORUpdateTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateTitleOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateTitle", new object[] {
                        TitleID,
                        Title,
                        ModifiedBy}, this.AddORUpdateTitleOperationCompleted, userState);
        }
        
        private void OnAddORUpdateTitleOperationCompleted(object arg) {
            if ((this.AddORUpdateTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateTitleCompleted(this, new AddORUpdateTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteTitle", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTitle(int TitleId, int UserId) {
            this.Invoke("DeleteTitle", new object[] {
                        TitleId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteTitleAsync(int TitleId, int UserId) {
            this.DeleteTitleAsync(TitleId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteTitleAsync(int TitleId, int UserId, object userState) {
            if ((this.DeleteTitleOperationCompleted == null)) {
                this.DeleteTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTitleOperationCompleted);
            }
            this.InvokeAsync("DeleteTitle", new object[] {
                        TitleId,
                        UserId}, this.DeleteTitleOperationCompleted, userState);
        }
        
        private void OnDeleteTitleOperationCompleted(object arg) {
            if ((this.DeleteTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTitleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchAppointementTime", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchAppointementTime(string AppointmentTime) {
            object[] results = this.Invoke("SearchAppointementTime", new object[] {
                        AppointmentTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAppointementTimeAsync(string AppointmentTime) {
            this.SearchAppointementTimeAsync(AppointmentTime, null);
        }
        
        /// <remarks/>
        public void SearchAppointementTimeAsync(string AppointmentTime, object userState) {
            if ((this.SearchAppointementTimeOperationCompleted == null)) {
                this.SearchAppointementTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAppointementTimeOperationCompleted);
            }
            this.InvokeAsync("SearchAppointementTime", new object[] {
                        AppointmentTime}, this.SearchAppointementTimeOperationCompleted, userState);
        }
        
        private void OnSearchAppointementTimeOperationCompleted(object arg) {
            if ((this.SearchAppointementTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAppointementTimeCompleted(this, new SearchAppointementTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateAppointmentTime", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateAppointmentTime(int AppointmentID, string AppointmentTime, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateAppointmentTime", new object[] {
                        AppointmentID,
                        AppointmentTime,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateAppointmentTimeAsync(int AppointmentID, string AppointmentTime, int ModifiedBy) {
            this.AddORUpdateAppointmentTimeAsync(AppointmentID, AppointmentTime, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateAppointmentTimeAsync(int AppointmentID, string AppointmentTime, int ModifiedBy, object userState) {
            if ((this.AddORUpdateAppointmentTimeOperationCompleted == null)) {
                this.AddORUpdateAppointmentTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateAppointmentTimeOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateAppointmentTime", new object[] {
                        AppointmentID,
                        AppointmentTime,
                        ModifiedBy}, this.AddORUpdateAppointmentTimeOperationCompleted, userState);
        }
        
        private void OnAddORUpdateAppointmentTimeOperationCompleted(object arg) {
            if ((this.AddORUpdateAppointmentTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateAppointmentTimeCompleted(this, new AddORUpdateAppointmentTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteAppointmentTime", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAppointmentTime(int AppointmentId, int UserId) {
            this.Invoke("DeleteAppointmentTime", new object[] {
                        AppointmentId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteAppointmentTimeAsync(int AppointmentId, int UserId) {
            this.DeleteAppointmentTimeAsync(AppointmentId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteAppointmentTimeAsync(int AppointmentId, int UserId, object userState) {
            if ((this.DeleteAppointmentTimeOperationCompleted == null)) {
                this.DeleteAppointmentTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAppointmentTimeOperationCompleted);
            }
            this.InvokeAsync("DeleteAppointmentTime", new object[] {
                        AppointmentId,
                        UserId}, this.DeleteAppointmentTimeOperationCompleted, userState);
        }
        
        private void OnDeleteAppointmentTimeOperationCompleted(object arg) {
            if ((this.DeleteAppointmentTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAppointmentTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchAppointmentDuration", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchAppointmentDuration(string AppointmentDuration) {
            object[] results = this.Invoke("SearchAppointmentDuration", new object[] {
                        AppointmentDuration});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAppointmentDurationAsync(string AppointmentDuration) {
            this.SearchAppointmentDurationAsync(AppointmentDuration, null);
        }
        
        /// <remarks/>
        public void SearchAppointmentDurationAsync(string AppointmentDuration, object userState) {
            if ((this.SearchAppointmentDurationOperationCompleted == null)) {
                this.SearchAppointmentDurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAppointmentDurationOperationCompleted);
            }
            this.InvokeAsync("SearchAppointmentDuration", new object[] {
                        AppointmentDuration}, this.SearchAppointmentDurationOperationCompleted, userState);
        }
        
        private void OnSearchAppointmentDurationOperationCompleted(object arg) {
            if ((this.SearchAppointmentDurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAppointmentDurationCompleted(this, new SearchAppointmentDurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateAppointmentDuration", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateAppointmentDuration(int AppointmentDurationID, string AppointmentDuration, int DurationType, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateAppointmentDuration", new object[] {
                        AppointmentDurationID,
                        AppointmentDuration,
                        DurationType,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateAppointmentDurationAsync(int AppointmentDurationID, string AppointmentDuration, int DurationType, int ModifiedBy) {
            this.AddORUpdateAppointmentDurationAsync(AppointmentDurationID, AppointmentDuration, DurationType, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateAppointmentDurationAsync(int AppointmentDurationID, string AppointmentDuration, int DurationType, int ModifiedBy, object userState) {
            if ((this.AddORUpdateAppointmentDurationOperationCompleted == null)) {
                this.AddORUpdateAppointmentDurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateAppointmentDurationOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateAppointmentDuration", new object[] {
                        AppointmentDurationID,
                        AppointmentDuration,
                        DurationType,
                        ModifiedBy}, this.AddORUpdateAppointmentDurationOperationCompleted, userState);
        }
        
        private void OnAddORUpdateAppointmentDurationOperationCompleted(object arg) {
            if ((this.AddORUpdateAppointmentDurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateAppointmentDurationCompleted(this, new AddORUpdateAppointmentDurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteAppointmentDuration", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAppointmentDuration(int AppointmentId, int UserId) {
            this.Invoke("DeleteAppointmentDuration", new object[] {
                        AppointmentId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteAppointmentDurationAsync(int AppointmentId, int UserId) {
            this.DeleteAppointmentDurationAsync(AppointmentId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteAppointmentDurationAsync(int AppointmentId, int UserId, object userState) {
            if ((this.DeleteAppointmentDurationOperationCompleted == null)) {
                this.DeleteAppointmentDurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAppointmentDurationOperationCompleted);
            }
            this.InvokeAsync("DeleteAppointmentDuration", new object[] {
                        AppointmentId,
                        UserId}, this.DeleteAppointmentDurationOperationCompleted, userState);
        }
        
        private void OnDeleteAppointmentDurationOperationCompleted(object arg) {
            if ((this.DeleteAppointmentDurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAppointmentDurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchGPPractice", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchGPPractice(string GPPractice) {
            object[] results = this.Invoke("SearchGPPractice", new object[] {
                        GPPractice});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchGPPracticeAsync(string GPPractice) {
            this.SearchGPPracticeAsync(GPPractice, null);
        }
        
        /// <remarks/>
        public void SearchGPPracticeAsync(string GPPractice, object userState) {
            if ((this.SearchGPPracticeOperationCompleted == null)) {
                this.SearchGPPracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchGPPracticeOperationCompleted);
            }
            this.InvokeAsync("SearchGPPractice", new object[] {
                        GPPractice}, this.SearchGPPracticeOperationCompleted, userState);
        }
        
        private void OnSearchGPPracticeOperationCompleted(object arg) {
            if ((this.SearchGPPracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchGPPracticeCompleted(this, new SearchGPPracticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddOrUpdateGPPractice", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrUpdateGPPractice(
                    int GPPracticeID, 
                    int AddressID, 
                    string PracticeName, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string Address4, 
                    string FullAddress, 
                    string PostCode, 
                    double Easting, 
                    double Northing, 
                    string GridReference, 
                    string UPRN, 
                    double Latitude, 
                    double Longitutde, 
                    string Telephone, 
                    int ModifiedBy) {
            this.Invoke("AddOrUpdateGPPractice", new object[] {
                        GPPracticeID,
                        AddressID,
                        PracticeName,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        FullAddress,
                        PostCode,
                        Easting,
                        Northing,
                        GridReference,
                        UPRN,
                        Latitude,
                        Longitutde,
                        Telephone,
                        ModifiedBy});
        }
        
        /// <remarks/>
        public void AddOrUpdateGPPracticeAsync(
                    int GPPracticeID, 
                    int AddressID, 
                    string PracticeName, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string Address4, 
                    string FullAddress, 
                    string PostCode, 
                    double Easting, 
                    double Northing, 
                    string GridReference, 
                    string UPRN, 
                    double Latitude, 
                    double Longitutde, 
                    string Telephone, 
                    int ModifiedBy) {
            this.AddOrUpdateGPPracticeAsync(GPPracticeID, AddressID, PracticeName, Address1, Address2, Address3, Address4, FullAddress, PostCode, Easting, Northing, GridReference, UPRN, Latitude, Longitutde, Telephone, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddOrUpdateGPPracticeAsync(
                    int GPPracticeID, 
                    int AddressID, 
                    string PracticeName, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string Address4, 
                    string FullAddress, 
                    string PostCode, 
                    double Easting, 
                    double Northing, 
                    string GridReference, 
                    string UPRN, 
                    double Latitude, 
                    double Longitutde, 
                    string Telephone, 
                    int ModifiedBy, 
                    object userState) {
            if ((this.AddOrUpdateGPPracticeOperationCompleted == null)) {
                this.AddOrUpdateGPPracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrUpdateGPPracticeOperationCompleted);
            }
            this.InvokeAsync("AddOrUpdateGPPractice", new object[] {
                        GPPracticeID,
                        AddressID,
                        PracticeName,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        FullAddress,
                        PostCode,
                        Easting,
                        Northing,
                        GridReference,
                        UPRN,
                        Latitude,
                        Longitutde,
                        Telephone,
                        ModifiedBy}, this.AddOrUpdateGPPracticeOperationCompleted, userState);
        }
        
        private void OnAddOrUpdateGPPracticeOperationCompleted(object arg) {
            if ((this.AddOrUpdateGPPracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrUpdateGPPracticeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeletePractice", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePractice(int PracticeId, int UserId) {
            this.Invoke("DeletePractice", new object[] {
                        PracticeId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeletePracticeAsync(int PracticeId, int UserId) {
            this.DeletePracticeAsync(PracticeId, UserId, null);
        }
        
        /// <remarks/>
        public void DeletePracticeAsync(int PracticeId, int UserId, object userState) {
            if ((this.DeletePracticeOperationCompleted == null)) {
                this.DeletePracticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePracticeOperationCompleted);
            }
            this.InvokeAsync("DeletePractice", new object[] {
                        PracticeId,
                        UserId}, this.DeletePracticeOperationCompleted, userState);
        }
        
        private void OnDeletePracticeOperationCompleted(object arg) {
            if ((this.DeletePracticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePracticeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchRelationship", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchRelationship(string Relationship) {
            object[] results = this.Invoke("SearchRelationship", new object[] {
                        Relationship});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchRelationshipAsync(string Relationship) {
            this.SearchRelationshipAsync(Relationship, null);
        }
        
        /// <remarks/>
        public void SearchRelationshipAsync(string Relationship, object userState) {
            if ((this.SearchRelationshipOperationCompleted == null)) {
                this.SearchRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchRelationshipOperationCompleted);
            }
            this.InvokeAsync("SearchRelationship", new object[] {
                        Relationship}, this.SearchRelationshipOperationCompleted, userState);
        }
        
        private void OnSearchRelationshipOperationCompleted(object arg) {
            if ((this.SearchRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchRelationshipCompleted(this, new SearchRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateRelationship", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateRelationship(int RealtionshipID, string Relationship, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateRelationship", new object[] {
                        RealtionshipID,
                        Relationship,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateRelationshipAsync(int RealtionshipID, string Relationship, int ModifiedBy) {
            this.AddORUpdateRelationshipAsync(RealtionshipID, Relationship, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateRelationshipAsync(int RealtionshipID, string Relationship, int ModifiedBy, object userState) {
            if ((this.AddORUpdateRelationshipOperationCompleted == null)) {
                this.AddORUpdateRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateRelationshipOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateRelationship", new object[] {
                        RealtionshipID,
                        Relationship,
                        ModifiedBy}, this.AddORUpdateRelationshipOperationCompleted, userState);
        }
        
        private void OnAddORUpdateRelationshipOperationCompleted(object arg) {
            if ((this.AddORUpdateRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateRelationshipCompleted(this, new AddORUpdateRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteRelationship", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRelationship(int RelationshipID, int UserID) {
            this.Invoke("DeleteRelationship", new object[] {
                        RelationshipID,
                        UserID});
        }
        
        /// <remarks/>
        public void DeleteRelationshipAsync(int RelationshipID, int UserID) {
            this.DeleteRelationshipAsync(RelationshipID, UserID, null);
        }
        
        /// <remarks/>
        public void DeleteRelationshipAsync(int RelationshipID, int UserID, object userState) {
            if ((this.DeleteRelationshipOperationCompleted == null)) {
                this.DeleteRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRelationshipOperationCompleted);
            }
            this.InvokeAsync("DeleteRelationship", new object[] {
                        RelationshipID,
                        UserID}, this.DeleteRelationshipOperationCompleted, userState);
        }
        
        private void OnDeleteRelationshipOperationCompleted(object arg) {
            if ((this.DeleteRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRelationshipCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchFacilityType", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchFacilityType(string FacilityType) {
            object[] results = this.Invoke("SearchFacilityType", new object[] {
                        FacilityType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchFacilityTypeAsync(string FacilityType) {
            this.SearchFacilityTypeAsync(FacilityType, null);
        }
        
        /// <remarks/>
        public void SearchFacilityTypeAsync(string FacilityType, object userState) {
            if ((this.SearchFacilityTypeOperationCompleted == null)) {
                this.SearchFacilityTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchFacilityTypeOperationCompleted);
            }
            this.InvokeAsync("SearchFacilityType", new object[] {
                        FacilityType}, this.SearchFacilityTypeOperationCompleted, userState);
        }
        
        private void OnSearchFacilityTypeOperationCompleted(object arg) {
            if ((this.SearchFacilityTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchFacilityTypeCompleted(this, new SearchFacilityTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateFacilityType", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateFacilityType(int FacilityTypeID, string FacilityType, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateFacilityType", new object[] {
                        FacilityTypeID,
                        FacilityType,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateFacilityTypeAsync(int FacilityTypeID, string FacilityType, int ModifiedBy) {
            this.AddORUpdateFacilityTypeAsync(FacilityTypeID, FacilityType, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateFacilityTypeAsync(int FacilityTypeID, string FacilityType, int ModifiedBy, object userState) {
            if ((this.AddORUpdateFacilityTypeOperationCompleted == null)) {
                this.AddORUpdateFacilityTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateFacilityTypeOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateFacilityType", new object[] {
                        FacilityTypeID,
                        FacilityType,
                        ModifiedBy}, this.AddORUpdateFacilityTypeOperationCompleted, userState);
        }
        
        private void OnAddORUpdateFacilityTypeOperationCompleted(object arg) {
            if ((this.AddORUpdateFacilityTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateFacilityTypeCompleted(this, new AddORUpdateFacilityTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchFacilityAddress", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchFacilityAddress(string FacilityAddress) {
            object[] results = this.Invoke("SearchFacilityAddress", new object[] {
                        FacilityAddress});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchFacilityAddressAsync(string FacilityAddress) {
            this.SearchFacilityAddressAsync(FacilityAddress, null);
        }
        
        /// <remarks/>
        public void SearchFacilityAddressAsync(string FacilityAddress, object userState) {
            if ((this.SearchFacilityAddressOperationCompleted == null)) {
                this.SearchFacilityAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchFacilityAddressOperationCompleted);
            }
            this.InvokeAsync("SearchFacilityAddress", new object[] {
                        FacilityAddress}, this.SearchFacilityAddressOperationCompleted, userState);
        }
        
        private void OnSearchFacilityAddressOperationCompleted(object arg) {
            if ((this.SearchFacilityAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchFacilityAddressCompleted(this, new SearchFacilityAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateFacilityAddress", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddORUpdateFacilityAddress(
                    int FacilityAddressID, 
                    int AddressID, 
                    int FacilityType, 
                    string FacilityName, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string Address4, 
                    string FullAddress, 
                    string PostCode, 
                    double Easting, 
                    double Northing, 
                    string GridReference, 
                    string UPRN, 
                    double Latitude, 
                    double Longitutde, 
                    string TelePhone, 
                    int ModifiedBy) {
            this.Invoke("AddORUpdateFacilityAddress", new object[] {
                        FacilityAddressID,
                        AddressID,
                        FacilityType,
                        FacilityName,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        FullAddress,
                        PostCode,
                        Easting,
                        Northing,
                        GridReference,
                        UPRN,
                        Latitude,
                        Longitutde,
                        TelePhone,
                        ModifiedBy});
        }
        
        /// <remarks/>
        public void AddORUpdateFacilityAddressAsync(
                    int FacilityAddressID, 
                    int AddressID, 
                    int FacilityType, 
                    string FacilityName, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string Address4, 
                    string FullAddress, 
                    string PostCode, 
                    double Easting, 
                    double Northing, 
                    string GridReference, 
                    string UPRN, 
                    double Latitude, 
                    double Longitutde, 
                    string TelePhone, 
                    int ModifiedBy) {
            this.AddORUpdateFacilityAddressAsync(FacilityAddressID, AddressID, FacilityType, FacilityName, Address1, Address2, Address3, Address4, FullAddress, PostCode, Easting, Northing, GridReference, UPRN, Latitude, Longitutde, TelePhone, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateFacilityAddressAsync(
                    int FacilityAddressID, 
                    int AddressID, 
                    int FacilityType, 
                    string FacilityName, 
                    string Address1, 
                    string Address2, 
                    string Address3, 
                    string Address4, 
                    string FullAddress, 
                    string PostCode, 
                    double Easting, 
                    double Northing, 
                    string GridReference, 
                    string UPRN, 
                    double Latitude, 
                    double Longitutde, 
                    string TelePhone, 
                    int ModifiedBy, 
                    object userState) {
            if ((this.AddORUpdateFacilityAddressOperationCompleted == null)) {
                this.AddORUpdateFacilityAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateFacilityAddressOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateFacilityAddress", new object[] {
                        FacilityAddressID,
                        AddressID,
                        FacilityType,
                        FacilityName,
                        Address1,
                        Address2,
                        Address3,
                        Address4,
                        FullAddress,
                        PostCode,
                        Easting,
                        Northing,
                        GridReference,
                        UPRN,
                        Latitude,
                        Longitutde,
                        TelePhone,
                        ModifiedBy}, this.AddORUpdateFacilityAddressOperationCompleted, userState);
        }
        
        private void OnAddORUpdateFacilityAddressOperationCompleted(object arg) {
            if ((this.AddORUpdateFacilityAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateFacilityAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteFacilityAddress", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFacilityAddress(int AddressId, int UserId) {
            this.Invoke("DeleteFacilityAddress", new object[] {
                        AddressId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteFacilityAddressAsync(int AddressId, int UserId) {
            this.DeleteFacilityAddressAsync(AddressId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteFacilityAddressAsync(int AddressId, int UserId, object userState) {
            if ((this.DeleteFacilityAddressOperationCompleted == null)) {
                this.DeleteFacilityAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFacilityAddressOperationCompleted);
            }
            this.InvokeAsync("DeleteFacilityAddress", new object[] {
                        AddressId,
                        UserId}, this.DeleteFacilityAddressOperationCompleted, userState);
        }
        
        private void OnDeleteFacilityAddressOperationCompleted(object arg) {
            if ((this.DeleteFacilityAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFacilityAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchReasonForTransport", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchReasonForTransport(string TransportReason) {
            object[] results = this.Invoke("SearchReasonForTransport", new object[] {
                        TransportReason});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchReasonForTransportAsync(string TransportReason) {
            this.SearchReasonForTransportAsync(TransportReason, null);
        }
        
        /// <remarks/>
        public void SearchReasonForTransportAsync(string TransportReason, object userState) {
            if ((this.SearchReasonForTransportOperationCompleted == null)) {
                this.SearchReasonForTransportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchReasonForTransportOperationCompleted);
            }
            this.InvokeAsync("SearchReasonForTransport", new object[] {
                        TransportReason}, this.SearchReasonForTransportOperationCompleted, userState);
        }
        
        private void OnSearchReasonForTransportOperationCompleted(object arg) {
            if ((this.SearchReasonForTransportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchReasonForTransportCompleted(this, new SearchReasonForTransportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateTransportReason", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateTransportReason(int TransportReasonID, string TransportReason, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateTransportReason", new object[] {
                        TransportReasonID,
                        TransportReason,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateTransportReasonAsync(int TransportReasonID, string TransportReason, int ModifiedBy) {
            this.AddORUpdateTransportReasonAsync(TransportReasonID, TransportReason, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateTransportReasonAsync(int TransportReasonID, string TransportReason, int ModifiedBy, object userState) {
            if ((this.AddORUpdateTransportReasonOperationCompleted == null)) {
                this.AddORUpdateTransportReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateTransportReasonOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateTransportReason", new object[] {
                        TransportReasonID,
                        TransportReason,
                        ModifiedBy}, this.AddORUpdateTransportReasonOperationCompleted, userState);
        }
        
        private void OnAddORUpdateTransportReasonOperationCompleted(object arg) {
            if ((this.AddORUpdateTransportReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateTransportReasonCompleted(this, new AddORUpdateTransportReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteTransportReason", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTransportReason(int ReasonId, int UserId) {
            this.Invoke("DeleteTransportReason", new object[] {
                        ReasonId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteTransportReasonAsync(int ReasonId, int UserId) {
            this.DeleteTransportReasonAsync(ReasonId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteTransportReasonAsync(int ReasonId, int UserId, object userState) {
            if ((this.DeleteTransportReasonOperationCompleted == null)) {
                this.DeleteTransportReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTransportReasonOperationCompleted);
            }
            this.InvokeAsync("DeleteTransportReason", new object[] {
                        ReasonId,
                        UserId}, this.DeleteTransportReasonOperationCompleted, userState);
        }
        
        private void OnDeleteTransportReasonOperationCompleted(object arg) {
            if ((this.DeleteTransportReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTransportReasonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchTransportSelection", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchTransportSelection(string TransportSelection) {
            object[] results = this.Invoke("SearchTransportSelection", new object[] {
                        TransportSelection});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchTransportSelectionAsync(string TransportSelection) {
            this.SearchTransportSelectionAsync(TransportSelection, null);
        }
        
        /// <remarks/>
        public void SearchTransportSelectionAsync(string TransportSelection, object userState) {
            if ((this.SearchTransportSelectionOperationCompleted == null)) {
                this.SearchTransportSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchTransportSelectionOperationCompleted);
            }
            this.InvokeAsync("SearchTransportSelection", new object[] {
                        TransportSelection}, this.SearchTransportSelectionOperationCompleted, userState);
        }
        
        private void OnSearchTransportSelectionOperationCompleted(object arg) {
            if ((this.SearchTransportSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchTransportSelectionCompleted(this, new SearchTransportSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateTransportSelection", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateTransportSelection(int TransportSelectionID, string TransportSelection, string Description, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateTransportSelection", new object[] {
                        TransportSelectionID,
                        TransportSelection,
                        Description,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateTransportSelectionAsync(int TransportSelectionID, string TransportSelection, string Description, int ModifiedBy) {
            this.AddORUpdateTransportSelectionAsync(TransportSelectionID, TransportSelection, Description, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateTransportSelectionAsync(int TransportSelectionID, string TransportSelection, string Description, int ModifiedBy, object userState) {
            if ((this.AddORUpdateTransportSelectionOperationCompleted == null)) {
                this.AddORUpdateTransportSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateTransportSelectionOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateTransportSelection", new object[] {
                        TransportSelectionID,
                        TransportSelection,
                        Description,
                        ModifiedBy}, this.AddORUpdateTransportSelectionOperationCompleted, userState);
        }
        
        private void OnAddORUpdateTransportSelectionOperationCompleted(object arg) {
            if ((this.AddORUpdateTransportSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateTransportSelectionCompleted(this, new AddORUpdateTransportSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteTransportSelection", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTransportSelection(int SelectionId, int UserId) {
            this.Invoke("DeleteTransportSelection", new object[] {
                        SelectionId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteTransportSelectionAsync(int SelectionId, int UserId) {
            this.DeleteTransportSelectionAsync(SelectionId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteTransportSelectionAsync(int SelectionId, int UserId, object userState) {
            if ((this.DeleteTransportSelectionOperationCompleted == null)) {
                this.DeleteTransportSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTransportSelectionOperationCompleted);
            }
            this.InvokeAsync("DeleteTransportSelection", new object[] {
                        SelectionId,
                        UserId}, this.DeleteTransportSelectionOperationCompleted, userState);
        }
        
        private void OnDeleteTransportSelectionOperationCompleted(object arg) {
            if ((this.DeleteTransportSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTransportSelectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchInfectious", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchInfectious(string Infectious) {
            object[] results = this.Invoke("SearchInfectious", new object[] {
                        Infectious});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchInfectiousAsync(string Infectious) {
            this.SearchInfectiousAsync(Infectious, null);
        }
        
        /// <remarks/>
        public void SearchInfectiousAsync(string Infectious, object userState) {
            if ((this.SearchInfectiousOperationCompleted == null)) {
                this.SearchInfectiousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchInfectiousOperationCompleted);
            }
            this.InvokeAsync("SearchInfectious", new object[] {
                        Infectious}, this.SearchInfectiousOperationCompleted, userState);
        }
        
        private void OnSearchInfectiousOperationCompleted(object arg) {
            if ((this.SearchInfectiousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchInfectiousCompleted(this, new SearchInfectiousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateInfectious", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateInfectious(int InfectiousID, string Infectious, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateInfectious", new object[] {
                        InfectiousID,
                        Infectious,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateInfectiousAsync(int InfectiousID, string Infectious, int ModifiedBy) {
            this.AddORUpdateInfectiousAsync(InfectiousID, Infectious, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateInfectiousAsync(int InfectiousID, string Infectious, int ModifiedBy, object userState) {
            if ((this.AddORUpdateInfectiousOperationCompleted == null)) {
                this.AddORUpdateInfectiousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateInfectiousOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateInfectious", new object[] {
                        InfectiousID,
                        Infectious,
                        ModifiedBy}, this.AddORUpdateInfectiousOperationCompleted, userState);
        }
        
        private void OnAddORUpdateInfectiousOperationCompleted(object arg) {
            if ((this.AddORUpdateInfectiousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateInfectiousCompleted(this, new AddORUpdateInfectiousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteInfection", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteInfection(int InfectionId, int UserId) {
            this.Invoke("DeleteInfection", new object[] {
                        InfectionId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteInfectionAsync(int InfectionId, int UserId) {
            this.DeleteInfectionAsync(InfectionId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteInfectionAsync(int InfectionId, int UserId, object userState) {
            if ((this.DeleteInfectionOperationCompleted == null)) {
                this.DeleteInfectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInfectionOperationCompleted);
            }
            this.InvokeAsync("DeleteInfection", new object[] {
                        InfectionId,
                        UserId}, this.DeleteInfectionOperationCompleted, userState);
        }
        
        private void OnDeleteInfectionOperationCompleted(object arg) {
            if ((this.DeleteInfectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInfectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchEscortType", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchEscortType(string EscortType) {
            object[] results = this.Invoke("SearchEscortType", new object[] {
                        EscortType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchEscortTypeAsync(string EscortType) {
            this.SearchEscortTypeAsync(EscortType, null);
        }
        
        /// <remarks/>
        public void SearchEscortTypeAsync(string EscortType, object userState) {
            if ((this.SearchEscortTypeOperationCompleted == null)) {
                this.SearchEscortTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchEscortTypeOperationCompleted);
            }
            this.InvokeAsync("SearchEscortType", new object[] {
                        EscortType}, this.SearchEscortTypeOperationCompleted, userState);
        }
        
        private void OnSearchEscortTypeOperationCompleted(object arg) {
            if ((this.SearchEscortTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchEscortTypeCompleted(this, new SearchEscortTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateEscortType", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddORUpdateEscortType(int EscortTypeID, string EscortType, string NoOfEscort, int ModifiedBy) {
            this.Invoke("AddORUpdateEscortType", new object[] {
                        EscortTypeID,
                        EscortType,
                        NoOfEscort,
                        ModifiedBy});
        }
        
        /// <remarks/>
        public void AddORUpdateEscortTypeAsync(int EscortTypeID, string EscortType, string NoOfEscort, int ModifiedBy) {
            this.AddORUpdateEscortTypeAsync(EscortTypeID, EscortType, NoOfEscort, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateEscortTypeAsync(int EscortTypeID, string EscortType, string NoOfEscort, int ModifiedBy, object userState) {
            if ((this.AddORUpdateEscortTypeOperationCompleted == null)) {
                this.AddORUpdateEscortTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateEscortTypeOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateEscortType", new object[] {
                        EscortTypeID,
                        EscortType,
                        NoOfEscort,
                        ModifiedBy}, this.AddORUpdateEscortTypeOperationCompleted, userState);
        }
        
        private void OnAddORUpdateEscortTypeOperationCompleted(object arg) {
            if ((this.AddORUpdateEscortTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateEscortTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteEscort", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEscort(int EscortId, int UserId) {
            this.Invoke("DeleteEscort", new object[] {
                        EscortId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteEscortAsync(int EscortId, int UserId) {
            this.DeleteEscortAsync(EscortId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteEscortAsync(int EscortId, int UserId, object userState) {
            if ((this.DeleteEscortOperationCompleted == null)) {
                this.DeleteEscortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEscortOperationCompleted);
            }
            this.InvokeAsync("DeleteEscort", new object[] {
                        EscortId,
                        UserId}, this.DeleteEscortOperationCompleted, userState);
        }
        
        private void OnDeleteEscortOperationCompleted(object arg) {
            if ((this.DeleteEscortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEscortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchReasonForRejection", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchReasonForRejection(string ReasonForRejection) {
            object[] results = this.Invoke("SearchReasonForRejection", new object[] {
                        ReasonForRejection});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchReasonForRejectionAsync(string ReasonForRejection) {
            this.SearchReasonForRejectionAsync(ReasonForRejection, null);
        }
        
        /// <remarks/>
        public void SearchReasonForRejectionAsync(string ReasonForRejection, object userState) {
            if ((this.SearchReasonForRejectionOperationCompleted == null)) {
                this.SearchReasonForRejectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchReasonForRejectionOperationCompleted);
            }
            this.InvokeAsync("SearchReasonForRejection", new object[] {
                        ReasonForRejection}, this.SearchReasonForRejectionOperationCompleted, userState);
        }
        
        private void OnSearchReasonForRejectionOperationCompleted(object arg) {
            if ((this.SearchReasonForRejectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchReasonForRejectionCompleted(this, new SearchReasonForRejectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateReasonForRejection", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateReasonForRejection(int RejectionID, string RejectionReason, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateReasonForRejection", new object[] {
                        RejectionID,
                        RejectionReason,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateReasonForRejectionAsync(int RejectionID, string RejectionReason, int ModifiedBy) {
            this.AddORUpdateReasonForRejectionAsync(RejectionID, RejectionReason, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateReasonForRejectionAsync(int RejectionID, string RejectionReason, int ModifiedBy, object userState) {
            if ((this.AddORUpdateReasonForRejectionOperationCompleted == null)) {
                this.AddORUpdateReasonForRejectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateReasonForRejectionOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateReasonForRejection", new object[] {
                        RejectionID,
                        RejectionReason,
                        ModifiedBy}, this.AddORUpdateReasonForRejectionOperationCompleted, userState);
        }
        
        private void OnAddORUpdateReasonForRejectionOperationCompleted(object arg) {
            if ((this.AddORUpdateReasonForRejectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateReasonForRejectionCompleted(this, new AddORUpdateReasonForRejectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteRejectionList", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteRejectionList(int RejectionID, int UserID) {
            this.Invoke("DeleteRejectionList", new object[] {
                        RejectionID,
                        UserID});
        }
        
        /// <remarks/>
        public void DeleteRejectionListAsync(int RejectionID, int UserID) {
            this.DeleteRejectionListAsync(RejectionID, UserID, null);
        }
        
        /// <remarks/>
        public void DeleteRejectionListAsync(int RejectionID, int UserID, object userState) {
            if ((this.DeleteRejectionListOperationCompleted == null)) {
                this.DeleteRejectionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteRejectionListOperationCompleted);
            }
            this.InvokeAsync("DeleteRejectionList", new object[] {
                        RejectionID,
                        UserID}, this.DeleteRejectionListOperationCompleted, userState);
        }
        
        private void OnDeleteRejectionListOperationCompleted(object arg) {
            if ((this.DeleteRejectionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteRejectionListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchReasonForCancellation", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchReasonForCancellation(string ReasonForCancellation) {
            object[] results = this.Invoke("SearchReasonForCancellation", new object[] {
                        ReasonForCancellation});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchReasonForCancellationAsync(string ReasonForCancellation) {
            this.SearchReasonForCancellationAsync(ReasonForCancellation, null);
        }
        
        /// <remarks/>
        public void SearchReasonForCancellationAsync(string ReasonForCancellation, object userState) {
            if ((this.SearchReasonForCancellationOperationCompleted == null)) {
                this.SearchReasonForCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchReasonForCancellationOperationCompleted);
            }
            this.InvokeAsync("SearchReasonForCancellation", new object[] {
                        ReasonForCancellation}, this.SearchReasonForCancellationOperationCompleted, userState);
        }
        
        private void OnSearchReasonForCancellationOperationCompleted(object arg) {
            if ((this.SearchReasonForCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchReasonForCancellationCompleted(this, new SearchReasonForCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateCancelReason", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateCancelReason(int CancelReasonID, string CancelReason, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateCancelReason", new object[] {
                        CancelReasonID,
                        CancelReason,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateCancelReasonAsync(int CancelReasonID, string CancelReason, int ModifiedBy) {
            this.AddORUpdateCancelReasonAsync(CancelReasonID, CancelReason, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateCancelReasonAsync(int CancelReasonID, string CancelReason, int ModifiedBy, object userState) {
            if ((this.AddORUpdateCancelReasonOperationCompleted == null)) {
                this.AddORUpdateCancelReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateCancelReasonOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateCancelReason", new object[] {
                        CancelReasonID,
                        CancelReason,
                        ModifiedBy}, this.AddORUpdateCancelReasonOperationCompleted, userState);
        }
        
        private void OnAddORUpdateCancelReasonOperationCompleted(object arg) {
            if ((this.AddORUpdateCancelReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateCancelReasonCompleted(this, new AddORUpdateCancelReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteCancellationReason", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCancellationReason(int CancellationID, int UserID) {
            this.Invoke("DeleteCancellationReason", new object[] {
                        CancellationID,
                        UserID});
        }
        
        /// <remarks/>
        public void DeleteCancellationReasonAsync(int CancellationID, int UserID) {
            this.DeleteCancellationReasonAsync(CancellationID, UserID, null);
        }
        
        /// <remarks/>
        public void DeleteCancellationReasonAsync(int CancellationID, int UserID, object userState) {
            if ((this.DeleteCancellationReasonOperationCompleted == null)) {
                this.DeleteCancellationReasonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCancellationReasonOperationCompleted);
            }
            this.InvokeAsync("DeleteCancellationReason", new object[] {
                        CancellationID,
                        UserID}, this.DeleteCancellationReasonOperationCompleted, userState);
        }
        
        private void OnDeleteCancellationReasonOperationCompleted(object arg) {
            if ((this.DeleteCancellationReasonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCancellationReasonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchClinicianRole", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchClinicianRole(string ClinicianRole) {
            object[] results = this.Invoke("SearchClinicianRole", new object[] {
                        ClinicianRole});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchClinicianRoleAsync(string ClinicianRole) {
            this.SearchClinicianRoleAsync(ClinicianRole, null);
        }
        
        /// <remarks/>
        public void SearchClinicianRoleAsync(string ClinicianRole, object userState) {
            if ((this.SearchClinicianRoleOperationCompleted == null)) {
                this.SearchClinicianRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchClinicianRoleOperationCompleted);
            }
            this.InvokeAsync("SearchClinicianRole", new object[] {
                        ClinicianRole}, this.SearchClinicianRoleOperationCompleted, userState);
        }
        
        private void OnSearchClinicianRoleOperationCompleted(object arg) {
            if ((this.SearchClinicianRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchClinicianRoleCompleted(this, new SearchClinicianRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UsernamePasswordHeader")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddORUpdateAuthenticationRole", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddORUpdateAuthenticationRole(int AuthenticationRoleID, string AuthenticationRole, int ModifiedBy) {
            object[] results = this.Invoke("AddORUpdateAuthenticationRole", new object[] {
                        AuthenticationRoleID,
                        AuthenticationRole,
                        ModifiedBy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddORUpdateAuthenticationRoleAsync(int AuthenticationRoleID, string AuthenticationRole, int ModifiedBy) {
            this.AddORUpdateAuthenticationRoleAsync(AuthenticationRoleID, AuthenticationRole, ModifiedBy, null);
        }
        
        /// <remarks/>
        public void AddORUpdateAuthenticationRoleAsync(int AuthenticationRoleID, string AuthenticationRole, int ModifiedBy, object userState) {
            if ((this.AddORUpdateAuthenticationRoleOperationCompleted == null)) {
                this.AddORUpdateAuthenticationRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddORUpdateAuthenticationRoleOperationCompleted);
            }
            this.InvokeAsync("AddORUpdateAuthenticationRole", new object[] {
                        AuthenticationRoleID,
                        AuthenticationRole,
                        ModifiedBy}, this.AddORUpdateAuthenticationRoleOperationCompleted, userState);
        }
        
        private void OnAddORUpdateAuthenticationRoleOperationCompleted(object arg) {
            if ((this.AddORUpdateAuthenticationRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddORUpdateAuthenticationRoleCompleted(this, new AddORUpdateAuthenticationRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DeleteAuthRole", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAuthRole(int RoleId, int UserId) {
            this.Invoke("DeleteAuthRole", new object[] {
                        RoleId,
                        UserId});
        }
        
        /// <remarks/>
        public void DeleteAuthRoleAsync(int RoleId, int UserId) {
            this.DeleteAuthRoleAsync(RoleId, UserId, null);
        }
        
        /// <remarks/>
        public void DeleteAuthRoleAsync(int RoleId, int UserId, object userState) {
            if ((this.DeleteAuthRoleOperationCompleted == null)) {
                this.DeleteAuthRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAuthRoleOperationCompleted);
            }
            this.InvokeAsync("DeleteAuthRole", new object[] {
                        RoleId,
                        UserId}, this.DeleteAuthRoleOperationCompleted, userState);
        }
        
        private void OnDeleteAuthRoleOperationCompleted(object arg) {
            if ((this.DeleteAuthRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAuthRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/LoadCache", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoadCache(string TableNames) {
            object[] results = this.Invoke("LoadCache", new object[] {
                        TableNames});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadCacheAsync(string TableNames) {
            this.LoadCacheAsync(TableNames, null);
        }
        
        /// <remarks/>
        public void LoadCacheAsync(string TableNames, object userState) {
            if ((this.LoadCacheOperationCompleted == null)) {
                this.LoadCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadCacheOperationCompleted);
            }
            this.InvokeAsync("LoadCache", new object[] {
                        TableNames}, this.LoadCacheOperationCompleted, userState);
        }
        
        private void OnLoadCacheOperationCompleted(object arg) {
            if ((this.LoadCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadCacheCompleted(this, new LoadCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddorUpdateWebUser", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddorUpdateWebUser(
                    string Name, 
                    string Login, 
                    string password, 
                    string Email, 
                    int UserID, 
                    bool Active, 
                    bool isDeleted, 
                    int PositionID, 
                    int GenderTitleID, 
                    string FName, 
                    string SurName, 
                    int DepartmentID, 
                    string PostalAddress, 
                    int SerrviceID, 
                    string ContactTelNo, 
                    int FacilityID, 
                    string Extension) {
            this.Invoke("AddorUpdateWebUser", new object[] {
                        Name,
                        Login,
                        password,
                        Email,
                        UserID,
                        Active,
                        isDeleted,
                        PositionID,
                        GenderTitleID,
                        FName,
                        SurName,
                        DepartmentID,
                        PostalAddress,
                        SerrviceID,
                        ContactTelNo,
                        FacilityID,
                        Extension});
        }
        
        /// <remarks/>
        public void AddorUpdateWebUserAsync(
                    string Name, 
                    string Login, 
                    string password, 
                    string Email, 
                    int UserID, 
                    bool Active, 
                    bool isDeleted, 
                    int PositionID, 
                    int GenderTitleID, 
                    string FName, 
                    string SurName, 
                    int DepartmentID, 
                    string PostalAddress, 
                    int SerrviceID, 
                    string ContactTelNo, 
                    int FacilityID, 
                    string Extension) {
            this.AddorUpdateWebUserAsync(Name, Login, password, Email, UserID, Active, isDeleted, PositionID, GenderTitleID, FName, SurName, DepartmentID, PostalAddress, SerrviceID, ContactTelNo, FacilityID, Extension, null);
        }
        
        /// <remarks/>
        public void AddorUpdateWebUserAsync(
                    string Name, 
                    string Login, 
                    string password, 
                    string Email, 
                    int UserID, 
                    bool Active, 
                    bool isDeleted, 
                    int PositionID, 
                    int GenderTitleID, 
                    string FName, 
                    string SurName, 
                    int DepartmentID, 
                    string PostalAddress, 
                    int SerrviceID, 
                    string ContactTelNo, 
                    int FacilityID, 
                    string Extension, 
                    object userState) {
            if ((this.AddorUpdateWebUserOperationCompleted == null)) {
                this.AddorUpdateWebUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddorUpdateWebUserOperationCompleted);
            }
            this.InvokeAsync("AddorUpdateWebUser", new object[] {
                        Name,
                        Login,
                        password,
                        Email,
                        UserID,
                        Active,
                        isDeleted,
                        PositionID,
                        GenderTitleID,
                        FName,
                        SurName,
                        DepartmentID,
                        PostalAddress,
                        SerrviceID,
                        ContactTelNo,
                        FacilityID,
                        Extension}, this.AddorUpdateWebUserOperationCompleted, userState);
        }
        
        private void OnAddorUpdateWebUserOperationCompleted(object arg) {
            if ((this.AddorUpdateWebUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddorUpdateWebUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/GetUserDetails", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserDetails(int userid) {
            object[] results = this.Invoke("GetUserDetails", new object[] {
                        userid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDetailsAsync(int userid) {
            this.GetUserDetailsAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetUserDetailsAsync(int userid, object userState) {
            if ((this.GetUserDetailsOperationCompleted == null)) {
                this.GetUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDetailsOperationCompleted);
            }
            this.InvokeAsync("GetUserDetails", new object[] {
                        userid}, this.GetUserDetailsOperationCompleted, userState);
        }
        
        private void OnGetUserDetailsOperationCompleted(object arg) {
            if ((this.GetUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDetailsCompleted(this, new GetUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/AddorUpdateJourney", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("refNumber")]
        public string AddorUpdateJourney(System.Data.DataSet ds, int userid, out string BookingNumber) {
            object[] results = this.Invoke("AddorUpdateJourney", new object[] {
                        ds,
                        userid});
            BookingNumber = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddorUpdateJourneyAsync(System.Data.DataSet ds, int userid) {
            this.AddorUpdateJourneyAsync(ds, userid, null);
        }
        
        /// <remarks/>
        public void AddorUpdateJourneyAsync(System.Data.DataSet ds, int userid, object userState) {
            if ((this.AddorUpdateJourneyOperationCompleted == null)) {
                this.AddorUpdateJourneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddorUpdateJourneyOperationCompleted);
            }
            this.InvokeAsync("AddorUpdateJourney", new object[] {
                        ds,
                        userid}, this.AddorUpdateJourneyOperationCompleted, userState);
        }
        
        private void OnAddorUpdateJourneyOperationCompleted(object arg) {
            if ((this.AddorUpdateJourneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddorUpdateJourneyCompleted(this, new AddorUpdateJourneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/GetJourney", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetJourney(int BookingId, string BookingStatus, int UserID, string BookingDateFrom, string BookingDateTo, string BookingNumber) {
            object[] results = this.Invoke("GetJourney", new object[] {
                        BookingId,
                        BookingStatus,
                        UserID,
                        BookingDateFrom,
                        BookingDateTo,
                        BookingNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetJourneyAsync(int BookingId, string BookingStatus, int UserID, string BookingDateFrom, string BookingDateTo, string BookingNumber) {
            this.GetJourneyAsync(BookingId, BookingStatus, UserID, BookingDateFrom, BookingDateTo, BookingNumber, null);
        }
        
        /// <remarks/>
        public void GetJourneyAsync(int BookingId, string BookingStatus, int UserID, string BookingDateFrom, string BookingDateTo, string BookingNumber, object userState) {
            if ((this.GetJourneyOperationCompleted == null)) {
                this.GetJourneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJourneyOperationCompleted);
            }
            this.InvokeAsync("GetJourney", new object[] {
                        BookingId,
                        BookingStatus,
                        UserID,
                        BookingDateFrom,
                        BookingDateTo,
                        BookingNumber}, this.GetJourneyOperationCompleted, userState);
        }
        
        private void OnGetJourneyOperationCompleted(object arg) {
            if ((this.GetJourneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJourneyCompleted(this, new GetJourneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/GetJourneys_FilteredOn_JourneyDate", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetJourneys_FilteredOn_JourneyDate(int BookingId, string BookingStatus, int UserID, string JourneyDateFrom, string JourneyDateTo, string BookingNumber) {
            object[] results = this.Invoke("GetJourneys_FilteredOn_JourneyDate", new object[] {
                        BookingId,
                        BookingStatus,
                        UserID,
                        JourneyDateFrom,
                        JourneyDateTo,
                        BookingNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetJourneys_FilteredOn_JourneyDateAsync(int BookingId, string BookingStatus, int UserID, string JourneyDateFrom, string JourneyDateTo, string BookingNumber) {
            this.GetJourneys_FilteredOn_JourneyDateAsync(BookingId, BookingStatus, UserID, JourneyDateFrom, JourneyDateTo, BookingNumber, null);
        }
        
        /// <remarks/>
        public void GetJourneys_FilteredOn_JourneyDateAsync(int BookingId, string BookingStatus, int UserID, string JourneyDateFrom, string JourneyDateTo, string BookingNumber, object userState) {
            if ((this.GetJourneys_FilteredOn_JourneyDateOperationCompleted == null)) {
                this.GetJourneys_FilteredOn_JourneyDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJourneys_FilteredOn_JourneyDateOperationCompleted);
            }
            this.InvokeAsync("GetJourneys_FilteredOn_JourneyDate", new object[] {
                        BookingId,
                        BookingStatus,
                        UserID,
                        JourneyDateFrom,
                        JourneyDateTo,
                        BookingNumber}, this.GetJourneys_FilteredOn_JourneyDateOperationCompleted, userState);
        }
        
        private void OnGetJourneys_FilteredOn_JourneyDateOperationCompleted(object arg) {
            if ((this.GetJourneys_FilteredOn_JourneyDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJourneys_FilteredOn_JourneyDateCompleted(this, new GetJourneys_FilteredOn_JourneyDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/ChangeJourneyStatus", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangeJourneyStatus(int BookingId, string BookingNumber, string CancelReasonText, int statusID, int updatedby, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> CaseStatudID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> is24HourAmendment) {
            object[] results = this.Invoke("ChangeJourneyStatus", new object[] {
                        BookingId,
                        BookingNumber,
                        CancelReasonText,
                        statusID,
                        updatedby,
                        CaseStatudID,
                        is24HourAmendment});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeJourneyStatusAsync(int BookingId, string BookingNumber, string CancelReasonText, int statusID, int updatedby, System.Nullable<int> CaseStatudID, System.Nullable<bool> is24HourAmendment) {
            this.ChangeJourneyStatusAsync(BookingId, BookingNumber, CancelReasonText, statusID, updatedby, CaseStatudID, is24HourAmendment, null);
        }
        
        /// <remarks/>
        public void ChangeJourneyStatusAsync(int BookingId, string BookingNumber, string CancelReasonText, int statusID, int updatedby, System.Nullable<int> CaseStatudID, System.Nullable<bool> is24HourAmendment, object userState) {
            if ((this.ChangeJourneyStatusOperationCompleted == null)) {
                this.ChangeJourneyStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeJourneyStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeJourneyStatus", new object[] {
                        BookingId,
                        BookingNumber,
                        CancelReasonText,
                        statusID,
                        updatedby,
                        CaseStatudID,
                        is24HourAmendment}, this.ChangeJourneyStatusOperationCompleted, userState);
        }
        
        private void OnChangeJourneyStatusOperationCompleted(object arg) {
            if ((this.ChangeJourneyStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeJourneyStatusCompleted(this, new ChangeJourneyStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/CheckDuplicateAddress", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckDuplicateAddress(string[] Address) {
            object[] results = this.Invoke("CheckDuplicateAddress", new object[] {
                        Address});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDuplicateAddressAsync(string[] Address) {
            this.CheckDuplicateAddressAsync(Address, null);
        }
        
        /// <remarks/>
        public void CheckDuplicateAddressAsync(string[] Address, object userState) {
            if ((this.CheckDuplicateAddressOperationCompleted == null)) {
                this.CheckDuplicateAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDuplicateAddressOperationCompleted);
            }
            this.InvokeAsync("CheckDuplicateAddress", new object[] {
                        Address}, this.CheckDuplicateAddressOperationCompleted, userState);
        }
        
        private void OnCheckDuplicateAddressOperationCompleted(object arg) {
            if ((this.CheckDuplicateAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDuplicateAddressCompleted(this, new CheckDuplicateAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchFlagspatient_Address", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchFlagspatient_Address(int Patientid, int AddressId) {
            object[] results = this.Invoke("SearchFlagspatient_Address", new object[] {
                        Patientid,
                        AddressId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchFlagspatient_AddressAsync(int Patientid, int AddressId) {
            this.SearchFlagspatient_AddressAsync(Patientid, AddressId, null);
        }
        
        /// <remarks/>
        public void SearchFlagspatient_AddressAsync(int Patientid, int AddressId, object userState) {
            if ((this.SearchFlagspatient_AddressOperationCompleted == null)) {
                this.SearchFlagspatient_AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchFlagspatient_AddressOperationCompleted);
            }
            this.InvokeAsync("SearchFlagspatient_Address", new object[] {
                        Patientid,
                        AddressId}, this.SearchFlagspatient_AddressOperationCompleted, userState);
        }
        
        private void OnSearchFlagspatient_AddressOperationCompleted(object arg) {
            if ((this.SearchFlagspatient_AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchFlagspatient_AddressCompleted(this, new SearchFlagspatient_AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchFlagAddress", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchFlagAddress(string _URPN) {
            object[] results = this.Invoke("SearchFlagAddress", new object[] {
                        _URPN});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchFlagAddressAsync(string _URPN) {
            this.SearchFlagAddressAsync(_URPN, null);
        }
        
        /// <remarks/>
        public void SearchFlagAddressAsync(string _URPN, object userState) {
            if ((this.SearchFlagAddressOperationCompleted == null)) {
                this.SearchFlagAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchFlagAddressOperationCompleted);
            }
            this.InvokeAsync("SearchFlagAddress", new object[] {
                        _URPN}, this.SearchFlagAddressOperationCompleted, userState);
        }
        
        private void OnSearchFlagAddressOperationCompleted(object arg) {
            if ((this.SearchFlagAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchFlagAddressCompleted(this, new SearchFlagAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/CheckEmailAddress", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckEmailAddress(string EmailAddress, out string _username, out string _pasword) {
            object[] results = this.Invoke("CheckEmailAddress", new object[] {
                        EmailAddress});
            _username = ((string)(results[1]));
            _pasword = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmailAddressAsync(string EmailAddress) {
            this.CheckEmailAddressAsync(EmailAddress, null);
        }
        
        /// <remarks/>
        public void CheckEmailAddressAsync(string EmailAddress, object userState) {
            if ((this.CheckEmailAddressOperationCompleted == null)) {
                this.CheckEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmailAddressOperationCompleted);
            }
            this.InvokeAsync("CheckEmailAddress", new object[] {
                        EmailAddress}, this.CheckEmailAddressOperationCompleted, userState);
        }
        
        private void OnCheckEmailAddressOperationCompleted(object arg) {
            if ((this.CheckEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmailAddressCompleted(this, new CheckEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/SearchPatient", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchPatient(string nhsNumber) {
            object[] results = this.Invoke("SearchPatient", new object[] {
                        nhsNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchPatientAsync(string nhsNumber) {
            this.SearchPatientAsync(nhsNumber, null);
        }
        
        /// <remarks/>
        public void SearchPatientAsync(string nhsNumber, object userState) {
            if ((this.SearchPatientOperationCompleted == null)) {
                this.SearchPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPatientOperationCompleted);
            }
            this.InvokeAsync("SearchPatient", new object[] {
                        nhsNumber}, this.SearchPatientOperationCompleted, userState);
        }
        
        private void OnSearchPatientOperationCompleted(object arg) {
            if ((this.SearchPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPatientCompleted(this, new SearchPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/GetJourneyPDF", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetJourneyPDF(string referenceNo) {
            object[] results = this.Invoke("GetJourneyPDF", new object[] {
                        referenceNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetJourneyPDFAsync(string referenceNo) {
            this.GetJourneyPDFAsync(referenceNo, null);
        }
        
        /// <remarks/>
        public void GetJourneyPDFAsync(string referenceNo, object userState) {
            if ((this.GetJourneyPDFOperationCompleted == null)) {
                this.GetJourneyPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJourneyPDFOperationCompleted);
            }
            this.InvokeAsync("GetJourneyPDF", new object[] {
                        referenceNo}, this.GetJourneyPDFOperationCompleted, userState);
        }
        
        private void OnGetJourneyPDFOperationCompleted(object arg) {
            if ((this.GetJourneyPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJourneyPDFCompleted(this, new GetJourneyPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/DoUserExists", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoUserExists(string username) {
            object[] results = this.Invoke("DoUserExists", new object[] {
                        username});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoUserExistsAsync(string username) {
            this.DoUserExistsAsync(username, null);
        }
        
        /// <remarks/>
        public void DoUserExistsAsync(string username, object userState) {
            if ((this.DoUserExistsOperationCompleted == null)) {
                this.DoUserExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoUserExistsOperationCompleted);
            }
            this.InvokeAsync("DoUserExists", new object[] {
                        username}, this.DoUserExistsOperationCompleted, userState);
        }
        
        private void OnDoUserExistsOperationCompleted(object arg) {
            if ((this.DoUserExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoUserExistsCompleted(this, new DoUserExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://cad.valentiatech.com/GetCallNotes", RequestNamespace="http://cad.valentiatech.com/", ResponseNamespace="http://cad.valentiatech.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCallNotes(int CallId) {
            object[] results = this.Invoke("GetCallNotes", new object[] {
                        CallId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCallNotesAsync(int CallId) {
            this.GetCallNotesAsync(CallId, null);
        }
        
        /// <remarks/>
        public void GetCallNotesAsync(int CallId, object userState) {
            if ((this.GetCallNotesOperationCompleted == null)) {
                this.GetCallNotesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCallNotesOperationCompleted);
            }
            this.InvokeAsync("GetCallNotes", new object[] {
                        CallId}, this.GetCallNotesOperationCompleted, userState);
        }
        
        private void OnGetCallNotesOperationCompleted(object arg) {
            if ((this.GetCallNotesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCallNotesCompleted(this, new GetCallNotesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn://just.a.test/UsernamePasswordAuthorization")]
    [System.Xml.Serialization.XmlRootAttribute("UsernamePasswordHeader", Namespace="urn://just.a.test/UsernamePasswordAuthorization", IsNullable=true)]
    public partial class UsernamePasswordSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string tokenField;
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchTitleCompletedEventHandler(object sender, SearchTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateTitleCompletedEventHandler(object sender, AddORUpdateTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteTitleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchAppointementTimeCompletedEventHandler(object sender, SearchAppointementTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAppointementTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAppointementTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateAppointmentTimeCompletedEventHandler(object sender, AddORUpdateAppointmentTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateAppointmentTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateAppointmentTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteAppointmentTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchAppointmentDurationCompletedEventHandler(object sender, SearchAppointmentDurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAppointmentDurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAppointmentDurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateAppointmentDurationCompletedEventHandler(object sender, AddORUpdateAppointmentDurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateAppointmentDurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateAppointmentDurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteAppointmentDurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchGPPracticeCompletedEventHandler(object sender, SearchGPPracticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchGPPracticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchGPPracticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddOrUpdateGPPracticeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeletePracticeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchRelationshipCompletedEventHandler(object sender, SearchRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateRelationshipCompletedEventHandler(object sender, AddORUpdateRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteRelationshipCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchFacilityTypeCompletedEventHandler(object sender, SearchFacilityTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchFacilityTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchFacilityTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateFacilityTypeCompletedEventHandler(object sender, AddORUpdateFacilityTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateFacilityTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateFacilityTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchFacilityAddressCompletedEventHandler(object sender, SearchFacilityAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchFacilityAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchFacilityAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateFacilityAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteFacilityAddressCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchReasonForTransportCompletedEventHandler(object sender, SearchReasonForTransportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchReasonForTransportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchReasonForTransportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateTransportReasonCompletedEventHandler(object sender, AddORUpdateTransportReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateTransportReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateTransportReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteTransportReasonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchTransportSelectionCompletedEventHandler(object sender, SearchTransportSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchTransportSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchTransportSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateTransportSelectionCompletedEventHandler(object sender, AddORUpdateTransportSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateTransportSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateTransportSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteTransportSelectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchInfectiousCompletedEventHandler(object sender, SearchInfectiousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchInfectiousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchInfectiousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateInfectiousCompletedEventHandler(object sender, AddORUpdateInfectiousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateInfectiousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateInfectiousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteInfectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchEscortTypeCompletedEventHandler(object sender, SearchEscortTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchEscortTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchEscortTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateEscortTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteEscortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchReasonForRejectionCompletedEventHandler(object sender, SearchReasonForRejectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchReasonForRejectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchReasonForRejectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateReasonForRejectionCompletedEventHandler(object sender, AddORUpdateReasonForRejectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateReasonForRejectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateReasonForRejectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteRejectionListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchReasonForCancellationCompletedEventHandler(object sender, SearchReasonForCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchReasonForCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchReasonForCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateCancelReasonCompletedEventHandler(object sender, AddORUpdateCancelReasonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateCancelReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateCancelReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteCancellationReasonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchClinicianRoleCompletedEventHandler(object sender, SearchClinicianRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchClinicianRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchClinicianRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddORUpdateAuthenticationRoleCompletedEventHandler(object sender, AddORUpdateAuthenticationRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddORUpdateAuthenticationRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddORUpdateAuthenticationRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteAuthRoleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LoadCacheCompletedEventHandler(object sender, LoadCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddorUpdateWebUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetUserDetailsCompletedEventHandler(object sender, GetUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void AddorUpdateJourneyCompletedEventHandler(object sender, AddorUpdateJourneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddorUpdateJourneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddorUpdateJourneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string BookingNumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetJourneyCompletedEventHandler(object sender, GetJourneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJourneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJourneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetJourneys_FilteredOn_JourneyDateCompletedEventHandler(object sender, GetJourneys_FilteredOn_JourneyDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJourneys_FilteredOn_JourneyDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJourneys_FilteredOn_JourneyDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void ChangeJourneyStatusCompletedEventHandler(object sender, ChangeJourneyStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeJourneyStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeJourneyStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CheckDuplicateAddressCompletedEventHandler(object sender, CheckDuplicateAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDuplicateAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDuplicateAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchFlagspatient_AddressCompletedEventHandler(object sender, SearchFlagspatient_AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchFlagspatient_AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchFlagspatient_AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchFlagAddressCompletedEventHandler(object sender, SearchFlagAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchFlagAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchFlagAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CheckEmailAddressCompletedEventHandler(object sender, CheckEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string _username {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string _pasword {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void SearchPatientCompletedEventHandler(object sender, SearchPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetJourneyPDFCompletedEventHandler(object sender, GetJourneyPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJourneyPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJourneyPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DoUserExistsCompletedEventHandler(object sender, DoUserExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoUserExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoUserExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCallNotesCompletedEventHandler(object sender, GetCallNotesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCallNotesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCallNotesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591